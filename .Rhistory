ch3  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
chm1  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm2  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm3  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
df1 <- data.frame(y,
c1, c2, c3,
cm1, cm2, cm3,
l1, l2, l3,
lm1, lm2, lm3,
b1, b2, b3,
bm1, bm2, bm3,
n1, n2, n3,
nm1, nm2, nm3,
ch1, ch2, ch3,
chm1, chm2, chm3)
# Continuous Outcome
y  <- rnorm(1000)
# Continuous predictors with and without missing data
c1  <- runif(1000)
c2  <- runif(1000)
c3  <- runif(1000)
cm1 <- runif(1000)
cm1[sample.int(length(cm1), 100)] <- NA_real_
cm2 <- runif(1000)
cm2[sample.int(length(cm2), 100)] <- NA_real_
cm3 <- runif(1000)
cm3[sample.int(length(cm3), 100)] <- NA_real_
# Likert predictor with and without missing data
l1 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l2 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l3 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
lm1 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm2 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm3 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
# Binary predictors with and without missing data
b1  <- factor(sample(c(0,1), 1000, replace=TRUE))
b2  <- factor(sample(c(0,1), 1000, replace=TRUE))
b3  <- factor(sample(c(0,1), 1000, replace=TRUE))
bm1  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm2  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm3  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
# Nominal predictors with and without missing data
n1  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n2  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n3  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
nm1  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm2  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm3  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
# Character with and without missing data
ch1  <- as.character(sample(c("rock", "paper", "scissors"), 1000, replace=TRUE))
ch2  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch3  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
chm1  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm2  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm3  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
df1 <- data.frame(y,
c1, c2, c3,
cm1, cm2, cm3,
l1, l2, l3,
lm1, lm2, lm3,
b1, b2, b3,
bm1, bm2, bm3,
n1, n2, n3,
nm1, nm2, nm3,
ch1, ch2, ch3,
chm1, chm2, chm3)
str(df1$chm1)
ch1  <- as.character(ch1)
# Continuous Outcome
y  <- rnorm(1000)
# Continuous predictors with and without missing data
c1  <- runif(1000)
c2  <- runif(1000)
c3  <- runif(1000)
cm1 <- runif(1000)
cm1[sample.int(length(cm1), 100)] <- NA_real_
cm2 <- runif(1000)
cm2[sample.int(length(cm2), 100)] <- NA_real_
cm3 <- runif(1000)
cm3[sample.int(length(cm3), 100)] <- NA_real_
# Likert predictor with and without missing data
l1 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l2 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l3 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
lm1 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm2 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm3 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
# Binary predictors with and without missing data
b1  <- factor(sample(c(0,1), 1000, replace=TRUE))
b2  <- factor(sample(c(0,1), 1000, replace=TRUE))
b3  <- factor(sample(c(0,1), 1000, replace=TRUE))
bm1  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm2  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm3  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
# Nominal predictors with and without missing data
n1  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n2  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n3  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
nm1  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm2  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm3  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
# Character with and without missing data
ch1  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch1  <- as.character(ch1)
ch2  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch3  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
chm1  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm2  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm3  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
df1 <- data.frame(y,
c1, c2, c3,
cm1, cm2, cm3,
l1, l2, l3,
lm1, lm2, lm3,
b1, b2, b3,
bm1, bm2, bm3,
n1, n2, n3,
nm1, nm2, nm3,
ch1, ch2, ch3,
chm1, chm2, chm3)
str(df1$ch1)
str(as.character(df1$ch1))
df1$ch1 <- as.chracter()
df1$ch1 <- as.character()
df1$ch1 <- as.character(ch1)
str(df1$ch1)
# Continuous Outcome
y  <- rnorm(1000)
# Continuous predictors with and without missing data
c1  <- runif(1000)
c2  <- runif(1000)
c3  <- runif(1000)
cm1 <- runif(1000)
cm1[sample.int(length(cm1), 100)] <- NA_real_
cm2 <- runif(1000)
cm2[sample.int(length(cm2), 100)] <- NA_real_
cm3 <- runif(1000)
cm3[sample.int(length(cm3), 100)] <- NA_real_
# Likert predictor with and without missing data
l1 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l2 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l3 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
lm1 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm2 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm3 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
# Binary predictors with and without missing data
b1  <- factor(sample(c(0,1), 1000, replace=TRUE))
b2  <- factor(sample(c(0,1), 1000, replace=TRUE))
b3  <- factor(sample(c(0,1), 1000, replace=TRUE))
bm1  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm2  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm3  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
# Nominal predictors with and without missing data
n1  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n2  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n3  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
nm1  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm2  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm3  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
# Character with and without missing data
ch1  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch1  <- as.character(ch1)
ch2  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch3  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
chm1  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm2  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm3  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
df1 <- data.frame(y,
c1, c2, c3,
cm1, cm2, cm3,
l1, l2, l3,
lm1, lm2, lm3,
b1, b2, b3,
bm1, bm2, bm3,
n1, n2, n3,
nm1, nm2, nm3,
ch1, ch2, ch3,
chm1, chm2, chm3)
df1$ch1 <- as.character(ch1)
df1$ch2 <- as.character(ch2)
df1$ch3 <- as.character(ch3)
df1$chm1 <- as.character(chm1)
df1$chm2 <- as.character(chm2)
df1$chm3 <- as.character(chm3)
str(df$ch1)
str(df1$ch1)
str(df1$ch2)
str(df1$ch3)
str(df1)
ch1  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch1  <- as.character(ch1)
ch2  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch3  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
chm1  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm2  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm3  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
df1 <- data.frame(y,
c1, c2, c3,
cm1, cm2, cm3,
l1, l2, l3,
lm1, lm2, lm3,
b1, b2, b3,
bm1, bm2, bm3,
n1, n2, n3,
nm1, nm2, nm3,
ch1, ch2, ch3,
chm1, chm2, chm3)
str(df1)
# Continuous Outcome
y  <- rnorm(1000)
# Continuous predictors with and without missing data
c1  <- runif(1000)
c2  <- runif(1000)
c3  <- runif(1000)
cm1 <- runif(1000)
cm1[sample.int(length(cm1), 100)] <- NA_real_
cm2 <- runif(1000)
cm2[sample.int(length(cm2), 100)] <- NA_real_
cm3 <- runif(1000)
cm3[sample.int(length(cm3), 100)] <- NA_real_
# Likert predictor with and without missing data
l1 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l2 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
l3 <- sample(c(1,2,3,4,5,6,7), 1000, replace = TRUE)
lm1 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm2 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
lm3 <- sample(c(1,2,3,4,5,6,7, NA), 1000, replace = TRUE)
# Binary predictors with and without missing data
b1  <- factor(sample(c(0,1), 1000, replace=TRUE))
b2  <- factor(sample(c(0,1), 1000, replace=TRUE))
b3  <- factor(sample(c(0,1), 1000, replace=TRUE))
bm1  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm2  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
bm3  <- factor(sample(c(0,1, NA), 1000, replace=TRUE))
# Nominal predictors with and without missing data
n1  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n2  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
n3  <- factor(sample(c("cat", "dog", "mouse"), 1000, replace=TRUE))
nm1  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm2  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
nm3  <- factor(sample(c("cat", "dog", "mouse", NA), 1000, replace=TRUE))
# Character with and without missing data
ch1  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch1  <- as.character(ch1)
ch2  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
ch3  <- sample(c("rock", "paper", "scissors"), 1000, replace=TRUE)
chm1  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm2  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
chm3  <- sample(c("rock", "paper", "scissors", NA), 1000, replace=TRUE)
df1 <- data.frame(y,
c1, c2, c3,
cm1, cm2, cm3,
l1, l2, l3,
lm1, lm2, lm3,
b1, b2, b3,
bm1, bm2, bm3,
n1, n2, n3,
nm1, nm2, nm3,
ch1, ch2, ch3,
chm1, chm2, chm3)
df1$ch1 <- as.character(ch1)
df1$ch2 <- as.character(ch2)
df1$ch3 <- as.character(ch3)
df1$chm1 <- as.character(chm1)
df1$chm2 <- as.character(chm2)
df1$chm3 <- as.character(chm3)
df1 %>% dplyr::mutate(count_ch_is_rock = dgen::row_any_count(ch1, ch2, ch3, value = "rock")) %>%
dplyr::select(ch1, ch2, ch3, count_ch_is_rock)
df1 %>%
dplyr::mutate(count_ch_is_rock =
dgen::row_any_count(ch1, ch2, ch3,
value = "rock",
ignoreNA = TRUE)) %>%
dplyr::select(ch1, ch2, ch3, count_ch_is_rock)
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreNA = TRUE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreNA = FALSE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_n_is_cat = dgen::row_any_count(n1, n2, n3, value = "cat")) %>%
dplyr::select(n1, n2, n3, count_n_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(n1, n2, n3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = FALSE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
devtools::document()
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
length(df)
dim(df)
rows(df)
nrow(df)
NROW(df)
length(df1)
dim(df1)
ncols(df1)
NROW(df1)
nrow(df1)
ncol(df1)
NCOL(df1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_n_is_cat = dgen::row_any_count(n1, n2, n3, value = "cat")) %>%
dplyr::select(n1, n2, n3, count_n_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
devtools::document()
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
testdf <- data.frame(cm1, cm2, cm3)
View(testdf)
testdf <- testdf[is.na(testdf)] <- "Missing"
testdf <- data.frame(cm1, cm2, cm3)
testdf <- testdf[is.na(testdf)] <- "Missing"
testdf <- data.frame(cm1, cm2, cm3)
testdf[is.na(testdf)] <- "Missing"
View(testdf)
testdf <- data.frame(nm1, nm2, nm3)
testdf[is.na(testdf)] <- "Missing"
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_n_is_cat = dgen::row_any_count(n1, n2, n3, value = "cat")) %>%
dplyr::select(n1, n2, n3, count_n_is_cat)
testdf <- data.frame(nm1, nm2, nm3)
testdf[sapply(testdf, is.factor)] <- lapply(testdf[sapply(testdf, is.factor)],
as.character)
testdf[is.na(testdf)] <- "Missing"
str(testdf$nm1)
testdf[sapply(testdf, is.character)] <- lapply(testdf[sapply(testdf, is.character)],
as.factor)
str(testdf$nm1)
testx = (rowSums(testdf == "cat"))
testx
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
testdf <- data.frame(nm1, nm2, nm3)
str(testdf$nm1)
testdf[sapply(testdf, is.factor)] <- lapply(testdf[sapply(testdf, is.factor)],
as.character)
str(testdf$nm1)
testdf[is.na(testdf)] <- "Missing"
str(testdf$nm1)
str(testdf$nm1)
sapply(testdf, is.character)] <- lapply(testdf[sapply(testdf, is.character)],
testdf[sapply(testdf, is.character)] <- lapply(testdf[sapply(testdf, is.character)],
as.factor)
str(testdf$nm1)
testx = (rowSums(testdf == "cat"))
testx
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
row_any_count =  function(..., value, ignoreNA = TRUE){
df = (data.frame(...))
nmiss = rowSums(is.na(df))
nvars = NCOL(df)
if(ignoreNA == TRUE){
# Identifies vars that are factors and converts to character
df[sapply(df, is.factor)] <- lapply(df[sapply(df, is.factor)],
as.character)
df[is.na(df)] <- "Missing_Missing_Missing_Missing"
# This was my original approach. Is this reliable?
#df <- as.data.frame(df)
# From https://stackoverflow.com/questions/20637360/convert-all-data-frame-character-columns-to-factors
# Identifies vars that are character and converts to factor
df[sapply(df, is.character)] <- lapply(df[sapply(df, is.character)],
as.factor)
x = (rowSums(df == value))
}
if(ignoreNA == FALSE){
x = (rowSums(df == value))
}
final = ifelse(nmiss == nvars, NA, x)
}
devtools::document()
source('~/.active-rstudio-document', echo=TRUE)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
devtools::document()
df1 %>% dplyr::mutate(count_l_is_1 = dgen::row_any_count(l1, l2, l3, value = "1")) %>%
dplyr::select(l1, l2, l3, count_l_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE, ignoreNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = TRUE, ignoreAllNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE, ignoreAllNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = asdf, ignoreAllNA = TRUE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_lm_is_1 = dgen::row_any_count(lm1, lm2, lm3, value = "1", ignoreNA = FALSE)) %>%
dplyr::select(lm1, lm2, lm3, count_lm_is_1)
df1 %>% dplyr::mutate(count_n_is_cat = dgen::row_any_count(n1, n2, n3, value = "cat")) %>%
dplyr::select(n1, n2, n3, count_n_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreAllNA = TRUE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
df1 %>% dplyr::mutate(count_nm_is_cat = dgen::row_any_count(nm1, nm2, nm3, value = "cat", ignoreNA = FALSE, ignoreallNA = FALSE)) %>%
dplyr::select(nm1, nm2, nm3, count_nm_is_cat)
df1 %>% dplyr::mutate(count_ch_is_rock = dgen::row_any_count(ch1, ch2, ch3, value = "rock")) %>%
dplyr::select(ch1, ch2, ch3, count_ch_is_rock)
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreNA = TRUE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreNA = FALSE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreAllNA = TRUE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
devtools::document()
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreNA = FALSE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
df1 %>%
dplyr::mutate(count_chm_is_rock =
dgen::row_any_count(chm1, chm2, chm3,
value = "rock",
ignoreAllNA = TRUE)) %>%
dplyr::select(chm1, chm2, chm3, count_chm_is_rock)
