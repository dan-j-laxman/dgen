
# Ideas: 
  # Could we produce a frequency table that provides a side-by-side frequency (on even one after another) for a variable?
  # Could we have the name of the variable display with message that all values are missing?
  # Move varname to header?
  # Give totals of difference by stratifying variable?
  # Group_by

# Bugs
  # If do multiple, All values are missing are placed on the same screen in R markdown.


tableF = function(data, x, n = 20){
  
  x = eval(substitute(x),data)
  ## Keeps track of the variable
  .call = match.call()
  
  ## Error catch for all missing
  if(all(is.na(x))){
    warn = paste0("All values for ",  .call[3], " are missing.")
    warning(warn)
    return("NA")
  }
  
  ## Summary statistics
  Freq     = table(x, useNA="ifany")
  CumFreq  = round(cumsum(table(x, useNA="ifany")))
  Percent  = suppressWarnings(formatC(100*(prop.table(table(x, useNA="ifany"))), 
                                      format = "f", digits = 2, big.mark = ","))
  CumPerc  = suppressWarnings(formatC(100*cumsum(prop.table(table(x, useNA="ifany"))), 
                                      format = "f", digits = 2, big.mark = ","))
  Valid    = suppressWarnings(formatC(100*(prop.table(table(x, useNA="no"))), 
                                      format = "f", digits = 2, big.mark = ","))
  CumValid = suppressWarnings(formatC(100*cumsum(prop.table(table(x, useNA="no"))), 
                                      format = "f", digits = 2, big.mark = ","))
  
  ## If there is missing, add a blank line below the valids
  if (any(is.na(x))){
    names(Freq)[length(names(Freq))] = "Missing"
    names(CumFreq)[length(names(CumFreq))] = "Missing"
    final = data.frame(.call[3]  = names(Freq),
                       "Freq"    = as.character(Freq), 
                       "CumFreq" = as.character(CumFreq),  
                       "Percent" = paste0(Percent, "%"), 
                       "CumPerc" = paste0(CumPerc, "%"),
                       "Valid"   = c(paste0(Valid, "%"), ""),
                       "CumValid" = c(paste0(CumValid, "%"), ""))
    final[]=lapply(final,as.character)
    if (dim(final)[1] > n){
      final1 = final[c(1:(n/2)),]
      final2 = final[c((dim(final)[1] - n/2):(dim(final)[1])),]
      final1 = rbind(final1, "...")
      final = rbind(final1, final2)
      row.names(final) =  ifelse(final$Freq=="...", "...", row.names(final))
    }
  } else {
    final = data.frame(.call[3]  = names(Freq),
                       "Freq"    = as.character(Freq), 
                       "CumFreq" = as.character(CumFreq), 
                       "Percent" = paste0(Percent, "%"), 
                       "CumPerc" = paste0(CumPerc, "%"))
    final[]=lapply(final,as.character)
    if (dim(final)[1] > n){
      final1 = final[c(1:(n/2)),]
      final2 = final[c((dim(final)[1] - n/2):(dim(final)[1])),]
      final1 = rbind(final1, "...")
      final = rbind(final1, final2)
      row.names(final) =  ifelse(final$Freq=="...", "...", row.names(final))
    }}
  
  ## Output
  return(final)
  invisible(final)
}